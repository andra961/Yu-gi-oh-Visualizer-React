{"version":3,"sources":["Card.js","Header.js","Error.js","spinner.js","api.js","hooks/useCardfetch.js","App.js","index.js"],"names":["Card","name","card_images","level","type","atk","def","desc","cardTypeImg","className","src","image_url","alt","id","Header","setSearchTerm","useState","search","setSearch","useEffect","timer","setTimeout","clearTimeout","value","onChange","e","target","placeholder","Error","Spinner","APIBASE","API","loadCards","a","searchTerm","endPoint","fetch","response","ok","json","data","slice","useCardFetch","cards","setCards","isLoading","setIsLoading","isError","setIsError","result","App","map","card","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLA4CeA,MA1Cf,YAAkE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,KAMlDC,EAFa,yGAQjB,MAJa,eAATJ,EAAwBI,EANV,sEAQA,cAATJ,IAAuBI,EAPf,qEAUb,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKR,EAAY,GAAGS,UACrBC,IAAKX,IAET,sBAAKQ,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UAEI,6BAAKR,IACL,sBAAKQ,UAAU,OAAf,UACI,+BAAON,EACHA,EAAQ,IAAM,KAElB,qBAAKU,GAAG,OAAOH,IAAKF,EACpBI,IAAKX,UAGZI,EACG,sBAAKI,UAAU,QAAf,UACI,sCAASJ,KACT,sCAASC,QAEX,GAEN,4BAAIC,W,OCXLO,MAzBf,YAAoC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAWjC,OANAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,kBAAMN,EAAcE,KAAS,KAEtD,OAAO,kBAAMK,aAAaF,MACzB,CAACH,EAAQF,IAGV,mCACE,iDACA,uBACEX,KAAK,OACLmB,MAAON,EACPJ,GAAG,SACHW,SAfiB,SAACC,GAAD,OAAOP,EAAUO,EAAEC,OAAOH,QAgB3CI,YAAY,kBCXLC,EARD,WACV,OACI,qBAAKnB,UAAU,QAAf,SACI,qDCMGoB,MATf,WAEI,OACI,qBAAKpB,UAAU,iBAAf,SACI,qBAAKA,UAAU,e,uBCNrBqB,EAAU,iDAiBDC,EAfH,CAERC,UAAU,WAAD,4BAAE,4CAAAC,EAAA,6DAAOC,EAAP,+BAAoB,GAErBC,EAAYD,EACAJ,EAAU,SAAWI,EADRJ,EAFxB,SAKgBM,MAAMD,GALtB,YAKDE,EALC,QAOKC,GAPL,iCAOuBD,EAASE,OAPhC,uCAOwCC,KAAKC,MAAM,EAAE,MAPrD,cAQI,IAAIb,MAAM,2BARd,4CAAF,kDAAC,ICyBCc,EA1BM,WAAO,IAAD,EACW1B,mBAAS,IADpB,mBAClBkB,EADkB,KACNnB,EADM,OAECC,mBAAS,IAFV,mBAElB2B,EAFkB,KAEXC,EAFW,OAGS5B,oBAAS,GAHlB,mBAGlB6B,EAHkB,KAGPC,EAHO,OAIK9B,oBAAS,GAJd,mBAIlB+B,EAJkB,KAITC,EAJS,KAuBzB,OAjBA7B,qBAAU,YACO,uCAAG,4BAAAc,EAAA,6DAChBa,GAAa,GACbE,GAAW,GAFK,kBAIOjB,EAAIC,UAAUE,GAJrB,OAIRe,EAJQ,OAKdL,EAASK,GALK,gDAOdD,GAAW,GAPG,QAUhBF,GAAa,GAVG,yDAAH,qDAafd,KACC,CAACE,IAEG,CAAES,QAAO5B,gBAAe8B,YAAWE,YCU7BG,MAxBf,WAAgB,IAAD,EACwCR,IAA7CC,EADK,EACLA,MAAO5B,EADF,EACEA,cAAe8B,EADjB,EACiBA,UAAWE,EAD5B,EAC4BA,QAEzC,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQM,cAAeA,KAErB8B,IAAcE,GACd,qBAAKtC,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACGkC,EAAMQ,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,eAAwBA,GAAbA,EAAKvC,WAM9BkC,GAAW,cAAC,EAAD,IAEXF,GAAa,cAAC,EAAD,QC1BpBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f590be59.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Card ({name, card_images, level, type, atk, def, desc}) {\r\n\r\n    const spellIcon = \"https://ms.yugipedia.com//thumb/0/09/SPELL.svg/1200px-SPELL.svg.png\"\r\n    const trapIcon = \"https://ms.yugipedia.com//thumb/2/28/TRAP.svg/1200px-TRAP.svg.png\"\r\n    const starIcon = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Starball_Red.svg/1200px-Starball_Red.svg.png\"\r\n\r\n    let cardTypeImg = starIcon\r\n\r\n    if (type === \"Spell Card\") {cardTypeImg = spellIcon}\r\n\r\n    else if (type === \"Trap Card\") {cardTypeImg = trapIcon}\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={card_images[0].image_url}\r\n                alt={name}>\r\n            </img>\r\n            <div className=\"cardDesc\">\r\n                <div className=\"cardInfo\">\r\n\r\n                    <h4>{name}</h4>\r\n                    <div className=\"icon\">\r\n                        <span>{level ?\r\n                            level + \"x\" : \"\"\r\n                        }</span>\r\n                        <img id=\"icon\" src={cardTypeImg}\r\n                        alt={name}></img>\r\n                    </div>\r\n                </div>\r\n                {atk ? \r\n                    <div className=\"stats\">\r\n                        <p>ATK: {atk}</p>\r\n                        <p>DEF: {def}</p>\r\n                    </div>\r\n                    : \"\"\r\n                }\r\n                <p>{desc}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Header({ setSearchTerm }) {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const onChangeHandle = (e) => setSearch(e.target.value);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setSearchTerm(search), 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [search, setSearchTerm]);\r\n\r\n  return (\r\n    <header>\r\n      <h1>CARD VISUALIZER</h1>\r\n      <input\r\n        type=\"Text\"\r\n        value={search}\r\n        id=\"search\"\r\n        onChange={onChangeHandle}\r\n        placeholder=\"Search...\"\r\n      ></input>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\"\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            <h1>No results found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import React from \"react\"\r\n\r\nfunction Spinner() {\r\n\r\n    return (\r\n        <div className=\"spinnerWrapper\">\r\n            <div className=\"spinner\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","const APIBASE = \"https://db.ygoprodeck.com/api/v7/cardinfo.php?\"\r\n\r\nconst API = {\r\n\r\n    loadCards: async (searchTerm = \"\") => {\r\n\r\n        const endPoint = !searchTerm ? APIBASE \r\n                        : APIBASE + \"fname=\" + searchTerm\r\n\r\n        const response = await fetch(endPoint)\r\n\r\n        if(response.ok) return (await response.json()).data.slice(0,100)\r\n        else throw new Error(\"Something went wrong...\")\r\n    }\r\n\r\n}\r\n\r\nexport default API","import { useState, useEffect } from \"react\";\r\nimport API from \"../api\";\r\n\r\nconst useCardFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadCards = async () => {\r\n      setIsLoading(true);\r\n      setIsError(false);\r\n      try {\r\n        const result = await API.loadCards(searchTerm);\r\n        setCards(result);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    loadCards();\r\n  }, [searchTerm]);\r\n\r\n  return { cards, setSearchTerm, isLoading, isError };\r\n};\r\n\r\nexport default useCardFetch;\r\n","import React from \"react\";\n\nimport Card from \"./Card\";\n\nimport Header from \"./Header\";\n\nimport Error from \"./Error\";\n\nimport Spinner from \"./spinner\";\n\nimport useCardFetch from \"./hooks/useCardfetch\";\n\nfunction App() {\n  const { cards, setSearchTerm, isLoading, isError } = useCardFetch();\n\n  return (\n    <div className=\"App\">\n      <Header setSearchTerm={setSearchTerm} />\n\n      {!isLoading && !isError && (\n        <div className=\"container\">\n          <div className=\"cards-container\">\n            {cards.map((card) => {\n              return <Card key={card.id} {...card}></Card>;\n            })}\n          </div>\n        </div>\n      )}\n\n      {isError && <Error />}\n\n      {isLoading && <Spinner />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}